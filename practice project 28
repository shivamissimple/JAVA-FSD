import java.util.EmptyStackException;

public class StackDemo {

    private static class Stack {
        private int[] elements;
        private int top = -1;
        private int capacity = 10;

        public Stack() {
            elements = new int[capacity];
        }

        public void push(int data) {
            if (top == capacity - 1) {
                throw new IllegalStateException("Stack is full");
            }
            elements[++top] = data;
        }

        public int pop() {
            if (isEmpty()) {
                throw new EmptyStackException();
            }
            return elements[top--];
        }

        public int peek() {
            if (isEmpty()) {
                throw new EmptyStackException();
            }
            return elements[top];
        }

        public boolean isEmpty() {
            return top == -1;
        }
    }

    public static void main(String[] args) {
        Stack stack = new Stack();

        stack.push(10);
        stack.push(20);
        stack.push(30);

        System.out.println("Popped element: " + stack.pop());  // Output: 30

        System.out.println("Top element: " + stack.peek());    // Output: 20

        System.out.println("Stack elements:");
        while (!stack.isEmpty()) {
            System.out.print(stack.pop() + " ");   // Output: 20 10
        }
    }
}
