import java.util.Collections;
import java.util.PriorityQueue;

public class FourthSmallestElement {

    public static void main(String[] args) {
        int[] data = {5, 3, 1, 7, 2, 4, 6};

        int fourthSmallest = findFourthSmallest(data);

        System.out.println("The fourth smallest element in the list is: " + fourthSmallest);
    }

    public static int findFourthSmallest(int[] data) {
        // Use a min-heap to efficiently find the k smallest elements
        PriorityQueue<Integer> minHeap = new PriorityQueue<>(Collections.reverseOrder());

        // Add the first k elements to the heap
        for (int i = 0; i < 4; i++) {
            minHeap.add(data[i]);
        }

        // Iterate through the remaining elements
        for (int i = 4; i < data.length; i++) {
            // If the current element is smaller than the largest element in the heap,
            // remove the largest and add the current element
            if (data[i] < minHeap.peek()) {
                minHeap.poll();
                minHeap.add(data[i]);
            }
        }

        // The top element of the heap now contains the fourth smallest element
        return minHeap.peek();
    }
}
