import java.util.NoSuchElementException;

public class QueueDemo {

    private static class Queue {
        private int[] elements;
        private int front = 0;
        private int rear = -1;
        private int capacity = 10;

        public Queue() {
            elements = new int[capacity];
        }

        public void enqueue(int data) {
            if (rear == capacity - 1) {
                throw new IllegalStateException("Queue is full");
            }
            elements[++rear] = data;
        }

        public int dequeue() {
            if (isEmpty()) {
                throw new NoSuchElementException("Queue is empty");
            }
            int item = elements[front];
            front++;
            return item;
        }

        public int peek() {
            if (isEmpty()) {
                throw new NoSuchElementException("Queue is empty");
            }
            return elements[front];
        }

        public boolean isEmpty() {
            return front > rear;
        }
    }

    public static void main(String[] args) {
        Queue queue = new Queue();

        queue.enqueue(10);
        queue.enqueue(20);
        queue.enqueue(30);

        System.out.println("Dequeued element: " + queue.dequeue());  // Output: 10

        System.out.println("Front element: " + queue.peek());     // Output: 20

        System.out.println("Queue elements:");
        while (!queue.isEmpty()) {
            System.out.print(queue.dequeue() + " ");   // Output: 20 30
        }
    }
}
